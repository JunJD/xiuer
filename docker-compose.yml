services:
  backend:
    image: xiuer-backend:local
    build:
      context: fastapi_backend
    environment:
      - OPENAPI_OUTPUT_FILE=./shared-data/openapi.json
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - TEST_DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5433/testdatabase
      - MAIL_SERVER=localhost
      - AUTO_MIGRATE=false
      - ACCESS_SECRET_KEY=${ACCESS_SECRET_KEY}
      - RESET_PASSWORD_SECRET_KEY=${RESET_PASSWORD_SECRET_KEY}
      - VERIFICATION_SECRET_KEY=${VERIFICATION_SECRET_KEY}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - FRONTEND_URL=${FRONTEND_URL}
    networks:
      - my_network
    volumes:
      - ./fastapi_backend:/app
      - fastapi-venv:/app/.venv
      - ./local-shared-data:/app/shared-data
    depends_on:
      - db
    restart: always

  db:
    image: postgres:17
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    networks:
      - my_network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  db_test:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: testdatabase
    ports:
      - "5433:5432"
    networks:
      - my_network
    restart: always

  frontend:
    image: xiuer-frontend:local
    build:
      context: ./nextjs-frontend
      dockerfile: Dockerfile.dev
      args:
        - OPENAPI_OUTPUT_FILE=./shared-data/openapi.json
    command: sh start.sh
    user: node
    ports:
      - "3000:3000"
    networks:
      - my_network
    environment:
      NODE_ENV: development
      OPENAPI_OUTPUT_FILE: ./shared-data/openapi.json
      API_BASE_URL: http://backend:8000
    volumes:
      - ./nextjs-frontend:/app
      - nextjs-node-modules:/app/node_modules
      - ./local-shared-data:/app/shared-data

volumes:
  postgres_data:
  nextjs-node-modules:
  fastapi-venv:

networks:
  my_network:
    driver: bridge 